{"version":3,"sources":["images/cover.png","images/business.png","images/chef.png","images/junk-food.png","containers/LoginForm.js","containers/RegisterForm.js","containers/Landing.js","components/Forms.js","components/Modals.js","components/Cards.js","containers/Home.js","components/Tables.js","containers/Entries.js","Routes.js","serviceWorker.js","index.js"],"names":["module","exports","LoginForm","useState","username","setUsername","password","setPassword","validated","setValidated","error","setError","history","useHistory","className","onSubmit","event","preventDefault","$","ajax","type","url","data","dataType","success","response","k","Cookies","set","push","console","log","message","Form","FormGroup","controlId","Label","Control","value","onChange","e","target","placeholder","Button","variant","disabled","length","Alert","show","RegisterForm","Landing","delay","src","require","ButtonGroup","onClick","progressPercent","progressBudget","vendor","cost","ProgressForm","props","changePercent","changeBudget","closeForm","user","get","handleSubmitProgress","handleCloseForm","Group","ref","input","EntryForm","addEntry","handleSubmitEntry","ConfirmationModal","Modal","onHide","handleClose","animation","Header","closeButton","Title","Body","Footer","handleConfirm","ProgressFormModal","disableClose","EntryFormModal","CardComponent","Card","image","cardCategory","cardStats","size","handleAdd","buttonText","Home","percent","parseFloat","budget","state","showReset","showForm","progressCloseButton","spent","mealsCooked","mealsBought","handleReset","bind","handleCloseReset","handleForm","handleOpenEntries","handleLogOut","handleAddCooked","handleAddTakeout","handleResetProgress","clearInterval","this","interval","setInterval","setState","time","Date","now","progressData","percentOrder","cookCount","orderCount","parseInt","undefined","actual","goal","diff","mealsOrdered","newCooked","newBought","budgetLeft","toFixed","ProgressBar","animated","label","getProgressVariant","React","Component","renderTableBody","entries","rows","map","entry","index","renderTableRows","EntryTable","Table","striped","hover","Entries","JSON","parse","handleBack","goBack","Routes","exact","path","component","withRouter","to","Boolean","window","location","hostname","match","customHistory","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4c3c3aa2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.0820dd1e.png\";","module.exports = __webpack_public_path__ + \"static/media/business.44030cf3.png\";","module.exports = __webpack_public_path__ + \"static/media/chef.17dd6d61.png\";","module.exports = __webpack_public_path__ + \"static/media/junk-food.74a55bf8.png\";","/* global $ */\n\nimport React, { useState } from \"react\";\nimport {Button, FormGroup, Form, Alert} from \"react-bootstrap\";\nimport \"../styles/Login.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FadeIn from \"react-fade-in\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from 'js-cookie';\n\nexport default function LoginForm() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [validated, setValidated] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    let history = useHistory();\n\n    function validateForm() {\n        return username.length > 0 && password.length > 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        $.ajax({\n            type: 'GET',\n            url: \"https://order-out-tracker.herokuapp.com/login?\" +\n                \"username=\" + username +\n                \"&password=\" + password,\n            data: '',\n            dataType: 'json',\n            success: function(response){\n                let k=response;\n                if (k.success) {\n                    Cookies.set('user', username);\n                    history.push('/home');\n                    setValidated(true);\n                    setError(\"\");\n                } else {\n                    console.log(k.message);\n                    setError(k.message);\n                    setValidated(false);\n                }\n            }\n        });\n    }\n\n    return (\n        <div className=\"LoginForm\">\n            <form onSubmit={handleSubmit}>\n                <FadeIn>\n                    <Form>\n                        <FormGroup controlId=\"formBasicEmail\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                value={username}\n                                onChange={e => setUsername(e.target.value)}\n                                type=\"username\"\n                                placeholder=\"Enter username\" />\n                        </FormGroup>\n\n                        <FormGroup controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                                type=\"password\"\n                                placeholder=\"Password\" />\n                        </FormGroup>\n                        <Button variant=\"primary\" type=\"submit\" disabled={!validateForm()}>\n                            Login\n                        </Button>\n                        <Alert className=\"UserAlert\" variant=\"danger\" show={!validated}>{error}</Alert>\n                    </Form>\n                </FadeIn>\n            </form>\n        </div>\n    );\n}","/* global $ */\n\nimport React, {useState} from \"react\";\nimport {Alert, Button, Form, FormGroup} from \"react-bootstrap\";\nimport \"../styles/Login.css\";\nimport {withRouter} from 'react-router-dom';\nimport FadeIn from \"react-fade-in\";\nimport { useHistory } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\n\nexport default function RegisterForm() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [validated, setValidated] = useState(true);\n    const [error, setError] = useState(\"\");\n    let history = useHistory();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        $.ajax({\n            type: 'POST',\n            url: \"https://order-out-tracker.herokuapp.com/createAccount?\" +\n                \"username=\" + username +\n                \"&password=\" + password,\n            data: '',\n            dataType: 'json',\n            success: function(response){\n                let k=response;\n                if (k.success) {\n                    Cookies.set('user', username);\n                    history.push('/home');\n                    setValidated(true);\n                    setError(\"\");\n                } else {\n                    console.log(k.message);\n                    setError(k.message);\n                    setValidated(false);\n                }\n            }\n        });\n    }\n\n    return (\n        <FadeIn>\n            <div className=\"RegisterForm\">\n                <form onSubmit={handleSubmit}>\n                    <Form>\n                        <FormGroup controlId=\"formBasicEmail\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control\n                                value={username}\n                                onChange={e => setUsername(e.target.value)}\n                                type=\"username\"\n                                placeholder=\"Enter username\" />\n                        </FormGroup>\n\n                        <FormGroup controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                value={password}\n                                onChange={e => setPassword(e.target.value)}\n                                type=\"password\"\n                                placeholder=\"Password\" />\n                        </FormGroup>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Register\n                        </Button>\n                        <Alert className=\"UserAlert\" variant=\"danger\" show={!validated}>{error}</Alert>\n                    </Form>\n                </form>\n            </div>\n        </FadeIn>\n    );\n}\n","import {Button, ButtonGroup} from \"react-bootstrap\";\nimport FadeIn from \"react-fade-in\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"../styles/Landing.css\";\n\nexport default function Landing() {\n    let history = useHistory();\n    return (\n        <div className=\"Landing\">\n            <FadeIn delay={1000}>\n                <img className=\"Logo\" src={require(\"../images/cover.png\")}/>\n                <ButtonGroup>\n                    <Button onClick={() => history.push('/login')} className=\"buttons\" variant=\"primary\" type=\"button\" >\n                        Login\n                    </Button>\n                    <Button onClick={() => history.push('/register')} className=\"buttons\" variant=\"primary\" type=\"button\">\n                        Register\n                    </Button>\n                </ButtonGroup>\n            </FadeIn>\n        </div>\n    );\n}\n","/* global $ */\nimport React from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport Cookies from \"js-cookie\";\nimport {useHistory} from \"react-router-dom\";\n\nlet progressPercent = 0;\nlet progressBudget = 0;\n\nlet vendor =\"\";\nlet cost=0;\n\nexport function handleSubmitProgress(event, changePercent, changeBudget, closeForm) {\n    event.preventDefault();\n    const user = Cookies.get('user');\n    Cookies.set('progressPercent', progressPercent.value);\n    Cookies.set('progressBudget', progressBudget.value);\n    $.ajax({\n        type: 'POST',\n        url: \"https://order-out-tracker.herokuapp.com/setProgress?\" +\n            \"user=\" + user +\n            \"&percentOrder=\" + progressPercent.value +\n            \"&budget=\" + progressBudget.value,\n        data: '',\n        success: function(response){\n            changePercent(progressPercent.value);\n            changeBudget(progressBudget.value);\n            closeForm();\n        }\n    });\n}\n\nfunction handleSubmitEntry(event, addEntry) {\n    event.preventDefault();\n    $.ajax({\n        type: 'POST',\n        url: \"https://order-out-tracker.herokuapp.com/addExpense?\" +\n            \"user=\" + Cookies.get('user') +\n            \"&vendor=\" + vendor.value +\n            \"&date=2020-01-01\" +\n            \"&cost=\" + cost.value,\n        data: '',\n        dataType: 'json',\n        success: function(response){\n            addEntry(vendor.value, cost.value);\n        }\n    });\n}\n\nexport const ProgressForm = (props) => {\n    return (\n        // eslint-disable-next-line no-restricted-globals\n        <Form onSubmit={() => handleSubmitProgress(event, props.changePercent, props.changeBudget, props.handleCloseForm)}>\n            <Form.Group controlId=\"formGridPercent\">\n                <Form.Label>Percentage of cooked meals (%)</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"50\" ref={(input) => progressPercent = input}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridBudget\">\n                <Form.Label>Budget ($)</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"150\" ref={(input) => progressBudget = input}/>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"success\">\n                Done!\n            </Button>\n        </Form>\n    )\n};\n\nexport const EntryForm = (props) => {\n    return (\n        // eslint-disable-next-line no-restricted-globals\n        <Form onSubmit={() => handleSubmitEntry(event, props.addEntry)}>\n            <Form.Group controlId=\"formGridVendor\">\n                <Form.Label>Restaurant:</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"McDonald's\" ref={(input) => vendor = input}/>\n            </Form.Group>\n\n            <Form.Group controlId=\"formGridCost\">\n                <Form.Label>Cost ($)</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"$12.00\" ref={(input) => cost = input}/>\n            </Form.Group>\n            <Button type=\"submit\" variant=\"success\">\n                Add\n            </Button>\n        </Form>\n    )\n};\n","import React from \"react\";\nimport {Button, Modal} from \"react-bootstrap\";\nimport {EntryForm, ProgressForm} from \"./Forms\";\nimport Cookies from \"js-cookie\";\n\nexport const ConfirmationModal = (props) => {\n    return (\n        <Modal show={props.show} onHide={props.handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>Wait!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>Are you sure you want to reset your progress? This will wipe out all existing information.</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-secondary\" onClick={props.handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"danger\" onClick={props.handleConfirm}>\n                    Yes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n};\n\nexport const ProgressFormModal = (props) => {\n    const handleClose = props.disableClose ? () => {} : props.handleClose;\n    return (\n        <Modal show={props.show} onHide={handleClose} animation={false}>\n            <Modal.Header {...props.closeButton}>\n                <Modal.Title>Change Goals</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <ProgressForm changePercent={props.changePercent}\n                              changeBudget={props.changeBudget}\n                              handleCloseForm={props.handleClose}/>\n            </Modal.Body>\n            {/*<Modal.Footer>\n                <Button disabled={!props.closeButton} variant=\"outline-secondary\" onClick={props.handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"success\" onClick={handleSubmitProgress}>\n                    Done!\n                </Button>\n            </Modal.Footer>*/}\n        </Modal>\n    )\n};\n\nexport const EntryFormModal = (props) => {\n    return (\n        <Modal show={props.show} onHide={props.handleClose} animation={false}>\n            <Modal.Header closeButton>\n                <Modal.Title>I Ordered Out!</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <EntryForm addEntry={props.addEntry}/>\n            </Modal.Body>\n            {/*<Modal.Footer>\n                <Button variant=\"outline-secondary\" onClick={props.handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"success\" onClick={handleSubmitForm}>\n                    Add\n                </Button>\n            </Modal.Footer>*/}\n        </Modal>\n    )\n};\n","/* global $ */\nimport Card from \"react-bootstrap/Card\";\nimport {Button} from \"react-bootstrap\";\nimport React, {useState} from \"react\";\nimport lifecycle from 'react-pure-lifecycle';\nimport Cookies from \"js-cookie\";\n\nconst methods = {\n    componentDidMount(props) {\n\n    }\n};\n\nexport const CardComponent = (props) => {\n    return (\n        <Card className=\"progress-cards\">\n            <Card.Body>\n                <img className=\"card-icon\" src={props.image}/>\n                {props.cardCategory} {props.cardStats}\n                <Button size=\"sm\" variant=\"outline-primary\" onClick={props.handleAdd}>{props.buttonText}</Button>\n            </Card.Body>\n        </Card>\n    )\n};\n","/* global $ */\n\nimport {Button, ButtonGroup, ProgressBar} from \"react-bootstrap\";\nimport FadeIn from \"react-fade-in\";\nimport React from \"react\";\nimport \"../styles/Home.css\";\nimport Card from \"react-bootstrap/Card\";\nimport {ConfirmationModal, ProgressFormModal} from \"../components/Modals\";\nimport Cookies from \"js-cookie\";\nimport {CardComponent} from \"../components/Cards\";\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const user = Cookies.get('user');\n        console.log(user);\n        if (!user || user === \"undefined\") {\n            this.props.history.push(\"/\");\n        }\n        const percent = parseFloat(Cookies.get('percentOrder'));\n        const budget = parseFloat(Cookies.get('budget'));\n        this.state = {\n            showReset : false,\n            showForm: !percent && !budget,\n            progressCloseButton: !percent && !budget,\n            percent: percent,\n            budget: budget,\n            spent: parseFloat(Cookies.get('spent')),\n            mealsCooked: Cookies.get('mealsCooked'),\n            mealsBought: Cookies.get('mealsBought')\n        };\n\n        this.handleReset = this.handleReset.bind(this);\n        this.handleCloseReset = this.handleCloseReset.bind(this);\n        this.handleForm = this.handleForm.bind(this);\n        this.handleCloseForm = this.handleCloseForm.bind(this);\n        this.handleOpenEntries = this.handleOpenEntries.bind(this);\n        this.handleLogOut = this.handleLogOut.bind(this);\n        this.handleAddCooked = this.handleAddCooked.bind(this);\n        this.handleAddTakeout = this.handleAddTakeout.bind(this);\n        this.handleResetProgress = this.handleResetProgress.bind(this);\n    }\n\n    componentWillMount() {\n        clearInterval(this.interval);\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n\n        $.ajax({\n            type: 'GET',\n            url: \"https://order-out-tracker.herokuapp.com/progress?\" +\n                \"user=\" + Cookies.get('user'),\n            data: '',\n            dataType: 'json',\n            success: function(response){\n                const progressData = response;\n                const percentOrder = progressData.percentOrder;\n                const budget = progressData.budget;\n                const spent = progressData.spent;\n                const mealsCooked = progressData.cookCount;\n                const mealsBought = progressData.orderCount;\n                Cookies.set('percentOrder', percentOrder);\n                Cookies.set('budget', budget);\n                Cookies.set('spent', spent);\n                Cookies.set('mealsCooked', mealsCooked);\n                Cookies.set('mealsBought', mealsBought);\n            }\n        });\n    }\n\n    changePercent(value) {\n        this.setState(() => {\n            return {percent: parseInt(value)};\n        });\n    }\n\n    changeBudget(value) {\n        this.setState(() => {\n            return {budget: parseInt(value)};\n        });\n    }\n\n    handleLogOut(event) {\n        Cookies.set('user', undefined);\n        this.props.history.push(\"/\");\n    }\n\n    handleOpenEntries(event) {\n        Cookies.set('percentOrder', this.state.percent);\n        Cookies.set('budget', this.state.budget);\n        Cookies.set('spent', this.state.spent);\n        Cookies.set('mealsCooked', this.state.mealsCooked);\n        Cookies.set('mealsBought', this.state.mealsBought);\n        this.props.history.push('/entries');\n    }\n\n    getProgressVariant(actual, goal) {\n        const diff = actual - goal;\n        switch (true) {\n            case (diff >= 0):\n                return 'success';\n            case (diff > 12):\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n     handleResetProgress() {\n        $.ajax({\n            type: 'POST',\n            url: \"https://order-out-tracker.herokuapp.com/deleteProgress?\" +\n                \"user=\" + Cookies.get('user'),\n            data: '',\n            dataType: 'json',\n            success: function (response) {\n            }\n        });\n        this.setState(() => {\n            return {budget: 0,\n                percent: 0,\n                spent: 0,\n                mealsCooked: 0,\n                mealsOrdered: 0,\n                showReset: false,\n                showForm: true};\n        });\n    }\n\n     handleAddCooked() {\n        let mealsCooked = parseInt(this.state.mealsCooked);\n        $.ajax({\n            type: 'POST',\n            url: \"https://order-out-tracker.herokuapp.com/addCookCount?\" +\n                \"user=\" + Cookies.get('user') +\n                \"&count=1\",\n            data: '',\n            dataType: 'json',\n            success: function () {\n                const newCooked = mealsCooked + 1;\n                Cookies.set('mealsCooked', newCooked);\n            }\n        });\n        this.setState((state) => {\n            return {mealsCooked: parseInt(state.mealsCooked) + 1};\n        });\n    }\n\n     handleAddTakeout() {\n         let mealsBought = parseInt(this.state.mealsBought);\n         $.ajax({\n            type: 'POST',\n            url: \"https://order-out-tracker.herokuapp.com/addOrderCount?\" +\n                \"user=\" + Cookies.get('user') +\n                \"&count=1\",\n            data: '',\n            dataType: 'json',\n            success: function () {\n                const newBought = mealsBought + 1;\n                Cookies.set('mealsBought', newBought);\n            }\n        });\n         this.setState((state) => {\n             return {mealsBought: parseInt(state.mealsBought) + 1};\n         });\n    }\n\n    handleReset() {\n        this.setState(() => {\n            return {showReset: true}\n        });\n    }\n\n    handleForm() {\n        this.setState(() => {\n            return {showForm: true}\n        });\n    }\n\n    handleCloseReset() {\n        this.setState(() => {\n            return {showReset: false};\n        });\n    }\n\n    handleCloseForm() {\n        this.setState(() => {\n            return {showForm: false};\n        });\n    }\n\n    render() {\n        const budget = parseInt(this.state.budget);\n        const spent = parseInt(this.state.spent);\n        const spentPercentage = spent / budget * 100;\n        const budgetLeft = budget === 0 && spent === 0 ? 0 : budget === 0 ? 100 : 100 - spentPercentage;\n        const goal = parseInt(this.state.percent);\n        const mealsCooked = parseInt(this.state.mealsCooked);\n        const mealsBought = parseInt(this.state.mealsBought);\n        let actual = (mealsBought + mealsCooked) === 0 ? 0 : mealsCooked / (mealsBought + mealsCooked) * 100;\n        actual = actual.toFixed(0);\n        return (\n            <div className=\"Home\">\n                <div className=\"HomeLogo\">\n                    <img className=\"Logo\" src={require(\"../images/cover.png\")}/>\n                </div>\n                <FadeIn delay={0}>\n                    <div className=\"progress-content\">\n                        <div className=\"progress-group\">\n\n                            <ButtonGroup>\n                                <Button className=\"right-align\" size=\"sm\" variant=\"outline-danger\"\n                                        onClick={this.handleReset}>Reset Progress</Button>\n                                <Button className=\"right-align\" size=\"sm\" variant=\"outline-success\"\n                                        onClick={this.handleForm}>Change Goals</Button>\n                            </ButtonGroup>\n                            <ConfirmationModal\n                                show={this.state.showReset}\n                                handleConfirm={this.handleResetProgress.bind(this)}\n                                handleClose={this.handleCloseReset}\n                            />\n                            <ProgressFormModal\n                                closeButton={this.state.progressCloseButton}\n                                show={this.state.showForm}\n                                changePercent={this.changePercent.bind(this)}\n                                changeBudget={this.changeBudget.bind(this)}\n                                disableClose={(!this.state.percent && !this.state.budget)}\n                                handleClose={this.handleCloseForm.bind(this)}\n                            />\n                            <div className=\"progress-cards\">\n                                <div className=\"progress-label\">{budgetLeft}% of budget left</div>\n                                <ProgressBar animated now={budgetLeft} label={`${budgetLeft}%`} variant='info'/>\n                            </div>\n                            <Card className=\"progress-cards\">\n                                <Card.Body>\n                                    <img className=\"card-icon\" src={require(\"../images/business.png\")}/>\n                                    <b>${spent}</b> of <b>${budget}</b> spent\n                                    <Button size=\"sm\" variant=\"outline-info\" onClick={this.handleOpenEntries}>Orders</Button>\n                                </Card.Body>\n                            </Card>\n                        </div>\n                        <div className=\"progress-group\">\n                            <div className=\"progress-cards\">\n                                <div className=\"progress-label\"><b>Goal:</b> {goal}% cooked meals</div>\n                                <ProgressBar animated now={goal} label={`${goal}%`}/>\n                            </div>\n                            <div className=\"progress-cards\">\n                                <div className=\"progress-label\"><b>Currently:</b> {actual}% cooked meals</div>\n                                <ProgressBar animated now={actual}\n                                             label={`${actual}%`}\n                                             variant={this.getProgressVariant(actual, goal)}/>\n                            </div>\n                            <CardComponent\n                                image={require(\"../images/chef.png\")}\n                                buttonText={\"+1\"}\n                                handleAdd={(this.state.budget || this.state.percent)&&this.handleAddCooked}\n                                cardCategory={<b>Meals <i>cooked:</i></b>}\n                                cardStats={mealsCooked}\n                            />\n                            <CardComponent\n                                image={require(\"../images/junk-food.png\")}\n                                buttonText={\"+1\"}\n                                handleAdd={(this.state.budget || this.state.percent)&&this.handleAddTakeout}\n                                cardCategory={<b>Meals <i>bought:</i></b>}\n                                cardStats={mealsBought}\n                            />\n                            <Button className=\"right-align\" size=\"sm\" variant=\"outline-dark\" onClick={this.handleLogOut}>Log\n                                Out</Button>\n                        </div>\n                    </div>\n                </FadeIn>\n            </div>\n        );\n    }\n}\n","import {Table} from \"react-bootstrap\";\nimport React from \"react\";\n\n\nexport function renderTableRows(entry, index) {\n    return (\n        <tr>\n            <td>{index+1}</td>\n            <td>{entry.vendor}</td>\n            <td>${entry.cost.toFixed(2)}</td>\n        </tr>\n    );\n}\n\nexport function renderTableBody(entries) {\n    const rows = entries;\n    return (\n        <tbody>\n        {rows.map((entry, index) => {\n            return renderTableRows(entry, index)\n        })}\n        </tbody>\n    );\n}\n\nexport const EntryTable = (props) => {\n    return (\n        <Table striped hover>\n            <thead>\n            <tr>\n                <th>#</th>\n                <th>Restaurant</th>\n                <th>Cost</th>\n            </tr>\n            </thead>\n            {renderTableBody(props.entries)}\n        </Table>\n    )\n};\n","/* global $ */\n\nimport React from \"react\";\nimport {Button, Table} from \"react-bootstrap\";\nimport FadeIn from \"react-fade-in\";\nimport \"../styles/Entries.css\";\nimport {EntryFormModal} from \"../components/Modals\";\nimport Cookies from \"js-cookie\";\nimport {EntryTable} from \"../components/Tables\";\n\nexport default class Entries extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const user = Cookies.get('user');\n        console.log(user);\n        if (!user || user === \"undefined\") {\n            this.props.history.push(\"/\");\n        }\n\n        this.state = {\n            showForm: false,\n            entries: JSON.parse(Cookies.get('entries'))\n        };\n\n        this.handleForm.bind(this);\n        this.handleBack.bind(this);\n        this.handleCloseForm.bind(this);\n    }\n\n    componentDidMount() {\n        $.ajax({\n            type: 'GET',\n            url: \"https://order-out-tracker.herokuapp.com/getExpenses?\" +\n                \"user=\" + Cookies.get('user'),\n            data: '',\n            dataType: 'json',\n            success: function(response){\n                const entries = response;\n                Cookies.set('entries', entries);\n            }\n        });\n    }\n\n    addEntry(vendor, cost) {\n        Cookies.set('spent', parseInt(Cookies.get('spent')) + cost);\n        this.setState((state) => {\n            let entries = state.entries;\n            entries.push({'vendor': vendor, 'cost': cost});\n            return {\n                entries: entries,\n                showForm: false\n            }\n        });\n    }\n\n    handleForm() {\n        this.setState(() => {\n            return {showForm: true};\n        });\n    }\n\n    handleCloseForm() {\n        this.setState(() => {\n            return {showForm: false};\n        });\n    }\n\n     handleBack() {\n        this.props.history.goBack();\n    }\n\n    render () {\n        return (\n            <div className=\"Entries\">\n                <div className=\"HomeLogo\">\n                    <img className=\"Logo\" src={require(\"../images/cover.png\")}/>\n                </div>\n                <FadeIn delay={0}>\n                    <div className=\"entries-content\">\n                        <Button className=\"entries-button\"\n                                size=\"sm\"\n                                variant=\"outline-primary\"\n                                onClick={this.handleBack.bind(this)}>\n                            Back\n                        </Button>\n                        <Button className=\"right-align entries-button\"\n                                size=\"sm\"\n                                variant=\"success\"\n                                onClick={this.handleForm.bind(this)}>\n                            Add\n                        </Button>\n                        <EntryFormModal\n                            addEntry={this.addEntry.bind(this)}\n                            show={this.state.showForm}\n                            handleClose={this.handleCloseForm.bind(this)}\n                        />\n                        <EntryTable entries={this.state.entries}/>\n                    </div>\n                </FadeIn>\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport {Switch, Route, withRouter, Redirect, BrowserRouter as Router} from \"react-router-dom\"\nimport LoginForm from \"./containers/LoginForm\";\nimport RegisterForm from \"./containers/RegisterForm\";\nimport Landing from \"./containers/Landing\";\nimport Home from \"./containers/Home\";\nimport Entries from \"./containers/Entries\";\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    <Route exact path='/login' component={withRouter(LoginForm)}/>\n                    <Route exact path=\"/register\" component={withRouter(RegisterForm)}/>\n                    <Route exact path=\"/landing\" component={withRouter(Landing)}/>\n                    <Route exact path=\"/home\" component={withRouter(Home)}/>\n                    <Route exact path=\"/entries\" component={withRouter(Entries)}/>\n                    <Redirect exact path=\"/\" to=\"landing\"/>\n                </Switch>\n            </Router>\n        )\n    }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes'\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport { createBrowserHistory} from 'history';\n\nconst customHistory = createBrowserHistory();\n\nReactDOM.render(\n    <Router history={customHistory}>\n        <Routes/>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}